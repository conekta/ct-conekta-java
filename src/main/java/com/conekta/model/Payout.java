/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.conekta.model.PayoutMethod;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.conekta.JSON;


/**
 * The payout information of the payout order.
 */
@JsonPropertyOrder({
  Payout.JSON_PROPERTY_PAYOUT_METHOD
})
@JsonTypeName("payout")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class Payout {
  public static final String JSON_PROPERTY_PAYOUT_METHOD = "payout_method";
  private PayoutMethod payoutMethod;

  public Payout() { 
  }

  public Payout payoutMethod(PayoutMethod payoutMethod) {
    this.payoutMethod = payoutMethod;
    return this;
  }

   /**
   * Get payoutMethod
   * @return payoutMethod
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayoutMethod getPayoutMethod() {
    return payoutMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYOUT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayoutMethod(PayoutMethod payoutMethod) {
    this.payoutMethod = payoutMethod;
  }


  /**
   * Return true if this payout object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payout payout = (Payout) o;
    return Objects.equals(this.payoutMethod, payout.payoutMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payoutMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payout {\n");
    sb.append("    payoutMethod: ").append(toIndentedString(payoutMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

