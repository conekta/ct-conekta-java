/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.conekta.model.BalanceCommonField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.conekta.JSON;


/**
 * balance model
 */
@JsonPropertyOrder({
  BalanceResponse.JSON_PROPERTY_AVAILABLE,
  BalanceResponse.JSON_PROPERTY_CASHOUT_RETENTION_AMOUNT,
  BalanceResponse.JSON_PROPERTY_CONEKTA_RETENTION,
  BalanceResponse.JSON_PROPERTY_GATEWAY,
  BalanceResponse.JSON_PROPERTY_PENDING,
  BalanceResponse.JSON_PROPERTY_RETAINED,
  BalanceResponse.JSON_PROPERTY_RETENTION_AMOUNT,
  BalanceResponse.JSON_PROPERTY_TARGET_COLLATERAL_AMOUNT,
  BalanceResponse.JSON_PROPERTY_TARGET_RETENTION_AMOUNT,
  BalanceResponse.JSON_PROPERTY_TEMPORARILY_RETAINED
})
@JsonTypeName("balance_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class BalanceResponse {
  public static final String JSON_PROPERTY_AVAILABLE = "available";
  private List<BalanceCommonField> available = new ArrayList<>();

  public static final String JSON_PROPERTY_CASHOUT_RETENTION_AMOUNT = "cashout_retention_amount";
  private List<BalanceCommonField> cashoutRetentionAmount = new ArrayList<>();

  public static final String JSON_PROPERTY_CONEKTA_RETENTION = "conekta_retention";
  private List<BalanceCommonField> conektaRetention = new ArrayList<>();

  public static final String JSON_PROPERTY_GATEWAY = "gateway";
  private List<BalanceCommonField> gateway = new ArrayList<>();

  public static final String JSON_PROPERTY_PENDING = "pending";
  private List<BalanceCommonField> pending = new ArrayList<>();

  public static final String JSON_PROPERTY_RETAINED = "retained";
  private List<BalanceCommonField> retained = new ArrayList<>();

  public static final String JSON_PROPERTY_RETENTION_AMOUNT = "retention_amount";
  private List<BalanceCommonField> retentionAmount = new ArrayList<>();

  public static final String JSON_PROPERTY_TARGET_COLLATERAL_AMOUNT = "target_collateral_amount";
  private Object targetCollateralAmount;

  public static final String JSON_PROPERTY_TARGET_RETENTION_AMOUNT = "target_retention_amount";
  private List<BalanceCommonField> targetRetentionAmount = new ArrayList<>();

  public static final String JSON_PROPERTY_TEMPORARILY_RETAINED = "temporarily_retained";
  private List<BalanceCommonField> temporarilyRetained = new ArrayList<>();

  public BalanceResponse() { 
  }

  public BalanceResponse available(List<BalanceCommonField> available) {
    this.available = available;
    return this;
  }

  public BalanceResponse addAvailableItem(BalanceCommonField availableItem) {
    if (this.available == null) {
      this.available = new ArrayList<>();
    }
    this.available.add(availableItem);
    return this;
  }

   /**
   * The balance&#39;s available
   * @return available
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getAvailable() {
    return available;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailable(List<BalanceCommonField> available) {
    this.available = available;
  }


  public BalanceResponse cashoutRetentionAmount(List<BalanceCommonField> cashoutRetentionAmount) {
    this.cashoutRetentionAmount = cashoutRetentionAmount;
    return this;
  }

  public BalanceResponse addCashoutRetentionAmountItem(BalanceCommonField cashoutRetentionAmountItem) {
    if (this.cashoutRetentionAmount == null) {
      this.cashoutRetentionAmount = new ArrayList<>();
    }
    this.cashoutRetentionAmount.add(cashoutRetentionAmountItem);
    return this;
  }

   /**
   * The balance&#39;s cashout retention amount
   * @return cashoutRetentionAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CASHOUT_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getCashoutRetentionAmount() {
    return cashoutRetentionAmount;
  }


  @JsonProperty(JSON_PROPERTY_CASHOUT_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCashoutRetentionAmount(List<BalanceCommonField> cashoutRetentionAmount) {
    this.cashoutRetentionAmount = cashoutRetentionAmount;
  }


  public BalanceResponse conektaRetention(List<BalanceCommonField> conektaRetention) {
    this.conektaRetention = conektaRetention;
    return this;
  }

  public BalanceResponse addConektaRetentionItem(BalanceCommonField conektaRetentionItem) {
    if (this.conektaRetention == null) {
      this.conektaRetention = new ArrayList<>();
    }
    this.conektaRetention.add(conektaRetentionItem);
    return this;
  }

   /**
   * The balance&#39;s conekta retention
   * @return conektaRetention
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONEKTA_RETENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getConektaRetention() {
    return conektaRetention;
  }


  @JsonProperty(JSON_PROPERTY_CONEKTA_RETENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConektaRetention(List<BalanceCommonField> conektaRetention) {
    this.conektaRetention = conektaRetention;
  }


  public BalanceResponse gateway(List<BalanceCommonField> gateway) {
    this.gateway = gateway;
    return this;
  }

  public BalanceResponse addGatewayItem(BalanceCommonField gatewayItem) {
    if (this.gateway == null) {
      this.gateway = new ArrayList<>();
    }
    this.gateway.add(gatewayItem);
    return this;
  }

   /**
   * The balance&#39;s gateway
   * @return gateway
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getGateway() {
    return gateway;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGateway(List<BalanceCommonField> gateway) {
    this.gateway = gateway;
  }


  public BalanceResponse pending(List<BalanceCommonField> pending) {
    this.pending = pending;
    return this;
  }

  public BalanceResponse addPendingItem(BalanceCommonField pendingItem) {
    if (this.pending == null) {
      this.pending = new ArrayList<>();
    }
    this.pending.add(pendingItem);
    return this;
  }

   /**
   * The balance&#39;s pending
   * @return pending
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getPending() {
    return pending;
  }


  @JsonProperty(JSON_PROPERTY_PENDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPending(List<BalanceCommonField> pending) {
    this.pending = pending;
  }


  public BalanceResponse retained(List<BalanceCommonField> retained) {
    this.retained = retained;
    return this;
  }

  public BalanceResponse addRetainedItem(BalanceCommonField retainedItem) {
    if (this.retained == null) {
      this.retained = new ArrayList<>();
    }
    this.retained.add(retainedItem);
    return this;
  }

   /**
   * The balance&#39;s retained
   * @return retained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getRetained() {
    return retained;
  }


  @JsonProperty(JSON_PROPERTY_RETAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetained(List<BalanceCommonField> retained) {
    this.retained = retained;
  }


  public BalanceResponse retentionAmount(List<BalanceCommonField> retentionAmount) {
    this.retentionAmount = retentionAmount;
    return this;
  }

  public BalanceResponse addRetentionAmountItem(BalanceCommonField retentionAmountItem) {
    if (this.retentionAmount == null) {
      this.retentionAmount = new ArrayList<>();
    }
    this.retentionAmount.add(retentionAmountItem);
    return this;
  }

   /**
   * The balance&#39;s retention amount
   * @return retentionAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getRetentionAmount() {
    return retentionAmount;
  }


  @JsonProperty(JSON_PROPERTY_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRetentionAmount(List<BalanceCommonField> retentionAmount) {
    this.retentionAmount = retentionAmount;
  }


  public BalanceResponse targetCollateralAmount(Object targetCollateralAmount) {
    this.targetCollateralAmount = targetCollateralAmount;
    return this;
  }

   /**
   * The balance&#39;s target collateral amount
   * @return targetCollateralAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_COLLATERAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTargetCollateralAmount() {
    return targetCollateralAmount;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_COLLATERAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetCollateralAmount(Object targetCollateralAmount) {
    this.targetCollateralAmount = targetCollateralAmount;
  }


  public BalanceResponse targetRetentionAmount(List<BalanceCommonField> targetRetentionAmount) {
    this.targetRetentionAmount = targetRetentionAmount;
    return this;
  }

  public BalanceResponse addTargetRetentionAmountItem(BalanceCommonField targetRetentionAmountItem) {
    if (this.targetRetentionAmount == null) {
      this.targetRetentionAmount = new ArrayList<>();
    }
    this.targetRetentionAmount.add(targetRetentionAmountItem);
    return this;
  }

   /**
   * The balance&#39;s target retention amount
   * @return targetRetentionAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getTargetRetentionAmount() {
    return targetRetentionAmount;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_RETENTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetRetentionAmount(List<BalanceCommonField> targetRetentionAmount) {
    this.targetRetentionAmount = targetRetentionAmount;
  }


  public BalanceResponse temporarilyRetained(List<BalanceCommonField> temporarilyRetained) {
    this.temporarilyRetained = temporarilyRetained;
    return this;
  }

  public BalanceResponse addTemporarilyRetainedItem(BalanceCommonField temporarilyRetainedItem) {
    if (this.temporarilyRetained == null) {
      this.temporarilyRetained = new ArrayList<>();
    }
    this.temporarilyRetained.add(temporarilyRetainedItem);
    return this;
  }

   /**
   * The balance&#39;s temporarily retained
   * @return temporarilyRetained
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPORARILY_RETAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BalanceCommonField> getTemporarilyRetained() {
    return temporarilyRetained;
  }


  @JsonProperty(JSON_PROPERTY_TEMPORARILY_RETAINED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemporarilyRetained(List<BalanceCommonField> temporarilyRetained) {
    this.temporarilyRetained = temporarilyRetained;
  }


  /**
   * Return true if this balance_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceResponse balanceResponse = (BalanceResponse) o;
    return Objects.equals(this.available, balanceResponse.available) &&
        Objects.equals(this.cashoutRetentionAmount, balanceResponse.cashoutRetentionAmount) &&
        Objects.equals(this.conektaRetention, balanceResponse.conektaRetention) &&
        Objects.equals(this.gateway, balanceResponse.gateway) &&
        Objects.equals(this.pending, balanceResponse.pending) &&
        Objects.equals(this.retained, balanceResponse.retained) &&
        Objects.equals(this.retentionAmount, balanceResponse.retentionAmount) &&
        Objects.equals(this.targetCollateralAmount, balanceResponse.targetCollateralAmount) &&
        Objects.equals(this.targetRetentionAmount, balanceResponse.targetRetentionAmount) &&
        Objects.equals(this.temporarilyRetained, balanceResponse.temporarilyRetained);
  }

  @Override
  public int hashCode() {
    return Objects.hash(available, cashoutRetentionAmount, conektaRetention, gateway, pending, retained, retentionAmount, targetCollateralAmount, targetRetentionAmount, temporarilyRetained);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceResponse {\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    cashoutRetentionAmount: ").append(toIndentedString(cashoutRetentionAmount)).append("\n");
    sb.append("    conektaRetention: ").append(toIndentedString(conektaRetention)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    retained: ").append(toIndentedString(retained)).append("\n");
    sb.append("    retentionAmount: ").append(toIndentedString(retentionAmount)).append("\n");
    sb.append("    targetCollateralAmount: ").append(toIndentedString(targetCollateralAmount)).append("\n");
    sb.append("    targetRetentionAmount: ").append(toIndentedString(targetRetentionAmount)).append("\n");
    sb.append("    temporarilyRetained: ").append(toIndentedString(temporarilyRetained)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

