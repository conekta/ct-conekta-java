/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.conekta.model.CompanyFiscalInfoAddressResponse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.conekta.JSON;


/**
 * Company fiscal info model
 */
@JsonPropertyOrder({
  CompanyFiscalInfoResponse.JSON_PROPERTY_OBJECT,
  CompanyFiscalInfoResponse.JSON_PROPERTY_TAX_ID,
  CompanyFiscalInfoResponse.JSON_PROPERTY_LEGAL_ENTITY_NAME,
  CompanyFiscalInfoResponse.JSON_PROPERTY_BUSINESS_TYPE,
  CompanyFiscalInfoResponse.JSON_PROPERTY_PHONE,
  CompanyFiscalInfoResponse.JSON_PROPERTY_PHYSICAL_PERSON_BUSINESS_TYPE,
  CompanyFiscalInfoResponse.JSON_PROPERTY_ADDRESS
})
@JsonTypeName("company_fiscal_info_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-30T11:12:04.718851-03:00[America/Argentina/Buenos_Aires]")
public class CompanyFiscalInfoResponse {
  /**
   * The resource&#39;s type
   */
  public enum ObjectEnum {
    FISCAL_INFO("fiscal_info");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OBJECT = "object";
  private ObjectEnum _object;

  public static final String JSON_PROPERTY_TAX_ID = "tax_id";
  private String taxId;

  public static final String JSON_PROPERTY_LEGAL_ENTITY_NAME = "legal_entity_name";
  private String legalEntityName;

  public static final String JSON_PROPERTY_BUSINESS_TYPE = "business_type";
  private String businessType;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_PHYSICAL_PERSON_BUSINESS_TYPE = "physical_person_business_type";
  private String physicalPersonBusinessType;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private CompanyFiscalInfoAddressResponse address;

  public CompanyFiscalInfoResponse() { 
  }

  public CompanyFiscalInfoResponse _object(ObjectEnum _object) {
    this._object = _object;
    return this;
  }

   /**
   * The resource&#39;s type
   * @return _object
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ObjectEnum getObject() {
    return _object;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObject(ObjectEnum _object) {
    this._object = _object;
  }


  public CompanyFiscalInfoResponse taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * Tax ID of the company
   * @return taxId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxId() {
    return taxId;
  }


  @JsonProperty(JSON_PROPERTY_TAX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public CompanyFiscalInfoResponse legalEntityName(String legalEntityName) {
    this.legalEntityName = legalEntityName;
    return this;
  }

   /**
   * Legal name of the company
   * @return legalEntityName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEGAL_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLegalEntityName() {
    return legalEntityName;
  }


  @JsonProperty(JSON_PROPERTY_LEGAL_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLegalEntityName(String legalEntityName) {
    this.legalEntityName = legalEntityName;
  }


  public CompanyFiscalInfoResponse businessType(String businessType) {
    this.businessType = businessType;
    return this;
  }

   /**
   * Business type of the company
   * @return businessType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUSINESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBusinessType() {
    return businessType;
  }


  @JsonProperty(JSON_PROPERTY_BUSINESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBusinessType(String businessType) {
    this.businessType = businessType;
  }


  public CompanyFiscalInfoResponse phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number of the company
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public CompanyFiscalInfoResponse physicalPersonBusinessType(String physicalPersonBusinessType) {
    this.physicalPersonBusinessType = physicalPersonBusinessType;
    return this;
  }

   /**
   * Business type if &#39;persona_fisica&#39;
   * @return physicalPersonBusinessType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYSICAL_PERSON_BUSINESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhysicalPersonBusinessType() {
    return physicalPersonBusinessType;
  }


  @JsonProperty(JSON_PROPERTY_PHYSICAL_PERSON_BUSINESS_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysicalPersonBusinessType(String physicalPersonBusinessType) {
    this.physicalPersonBusinessType = physicalPersonBusinessType;
  }


  public CompanyFiscalInfoResponse address(CompanyFiscalInfoAddressResponse address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyFiscalInfoAddressResponse getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(CompanyFiscalInfoAddressResponse address) {
    this.address = address;
  }


  /**
   * Return true if this company_fiscal_info_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyFiscalInfoResponse companyFiscalInfoResponse = (CompanyFiscalInfoResponse) o;
    return Objects.equals(this._object, companyFiscalInfoResponse._object) &&
        Objects.equals(this.taxId, companyFiscalInfoResponse.taxId) &&
        Objects.equals(this.legalEntityName, companyFiscalInfoResponse.legalEntityName) &&
        Objects.equals(this.businessType, companyFiscalInfoResponse.businessType) &&
        Objects.equals(this.phone, companyFiscalInfoResponse.phone) &&
        Objects.equals(this.physicalPersonBusinessType, companyFiscalInfoResponse.physicalPersonBusinessType) &&
        Objects.equals(this.address, companyFiscalInfoResponse.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_object, taxId, legalEntityName, businessType, phone, physicalPersonBusinessType, address);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyFiscalInfoResponse {\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    legalEntityName: ").append(toIndentedString(legalEntityName)).append("\n");
    sb.append("    businessType: ").append(toIndentedString(businessType)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    physicalPersonBusinessType: ").append(toIndentedString(physicalPersonBusinessType)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

