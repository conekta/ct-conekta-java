/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.conekta.JSON;


/**
 * PaymentMethodPbbPayment
 */
@JsonPropertyOrder({
  PaymentMethodPbbPayment.JSON_PROPERTY_TYPE,
  PaymentMethodPbbPayment.JSON_PROPERTY_OBJECT,
  PaymentMethodPbbPayment.JSON_PROPERTY_DEEP_LINK,
  PaymentMethodPbbPayment.JSON_PROPERTY_EXPIRES_AT,
  PaymentMethodPbbPayment.JSON_PROPERTY_PRODUCT_TYPE,
  PaymentMethodPbbPayment.JSON_PROPERTY_REDIRECT_URL,
  PaymentMethodPbbPayment.JSON_PROPERTY_REFERENCE
})
@JsonTypeName("payment_method_pbb_payment")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class PaymentMethodPbbPayment {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_OBJECT = "object";
  private String _object;

  public static final String JSON_PROPERTY_DEEP_LINK = "deep_link";
  private String deepLink;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
  private Long expiresAt;

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "product_type";
  private String productType;

  public static final String JSON_PROPERTY_REDIRECT_URL = "redirect_url";
  private String redirectUrl;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public PaymentMethodPbbPayment() { 
  }

  public PaymentMethodPbbPayment type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PaymentMethodPbbPayment _object(String _object) {
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getObject() {
    return _object;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObject(String _object) {
    this._object = _object;
  }


  public PaymentMethodPbbPayment deepLink(String deepLink) {
    this.deepLink = deepLink;
    return this;
  }

   /**
   * Deep link for the payment, use for mobile apps/flows
   * @return deepLink
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEEP_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeepLink() {
    return deepLink;
  }


  @JsonProperty(JSON_PROPERTY_DEEP_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeepLink(String deepLink) {
    this.deepLink = deepLink;
  }


  public PaymentMethodPbbPayment expiresAt(Long expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Expiration date of the charge
   * minimum: 0
   * @return expiresAt
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpiresAt(Long expiresAt) {
    this.expiresAt = expiresAt;
  }


  public PaymentMethodPbbPayment productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Product type of the charge
   * @return productType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProductType() {
    return productType;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductType(String productType) {
    this.productType = productType;
  }


  public PaymentMethodPbbPayment redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * URL to redirect the customer to complete the payment
   * @return redirectUrl
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRedirectUrl() {
    return redirectUrl;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  public PaymentMethodPbbPayment reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Reference for the payment
   * @return reference
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  /**
   * Return true if this payment_method_pbb_payment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodPbbPayment paymentMethodPbbPayment = (PaymentMethodPbbPayment) o;
    return Objects.equals(this.type, paymentMethodPbbPayment.type) &&
        Objects.equals(this._object, paymentMethodPbbPayment._object) &&
        Objects.equals(this.deepLink, paymentMethodPbbPayment.deepLink) &&
        Objects.equals(this.expiresAt, paymentMethodPbbPayment.expiresAt) &&
        Objects.equals(this.productType, paymentMethodPbbPayment.productType) &&
        Objects.equals(this.redirectUrl, paymentMethodPbbPayment.redirectUrl) &&
        Objects.equals(this.reference, paymentMethodPbbPayment.reference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, _object, deepLink, expiresAt, productType, redirectUrl, reference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodPbbPayment {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    deepLink: ").append(toIndentedString(deepLink)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

