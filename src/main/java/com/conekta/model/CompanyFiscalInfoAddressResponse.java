/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.conekta.JSON;


/**
 * Company fiscal info address model
 */
@JsonPropertyOrder({
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_OBJECT,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_STREET1,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_STREET2,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_CITY,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_STATE,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_COUNTRY,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_POSTAL_CODE,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_EXTERNAL_NUMBER,
  CompanyFiscalInfoAddressResponse.JSON_PROPERTY_INTERNAL_NUMBER
})
@JsonTypeName("company_fiscal_info_address_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-29T15:59:59.366769-03:00[America/Argentina/Buenos_Aires]")
public class CompanyFiscalInfoAddressResponse {
  /**
   * The resource&#39;s type
   */
  public enum ObjectEnum {
    ADDRESS("address");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OBJECT = "object";
  private ObjectEnum _object;

  public static final String JSON_PROPERTY_STREET1 = "street1";
  private String street1;

  public static final String JSON_PROPERTY_STREET2 = "street2";
  private String street2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postal_code";
  private String postalCode;

  public static final String JSON_PROPERTY_EXTERNAL_NUMBER = "external_number";
  private String externalNumber;

  public static final String JSON_PROPERTY_INTERNAL_NUMBER = "internal_number";
  private String internalNumber;

  public CompanyFiscalInfoAddressResponse() { 
  }

  public CompanyFiscalInfoAddressResponse _object(ObjectEnum _object) {
    this._object = _object;
    return this;
  }

   /**
   * The resource&#39;s type
   * @return _object
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ObjectEnum getObject() {
    return _object;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObject(ObjectEnum _object) {
    this._object = _object;
  }


  public CompanyFiscalInfoAddressResponse street1(String street1) {
    this.street1 = street1;
    return this;
  }

   /**
   * Street Address
   * @return street1
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreet1() {
    return street1;
  }


  @JsonProperty(JSON_PROPERTY_STREET1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreet1(String street1) {
    this.street1 = street1;
  }


  public CompanyFiscalInfoAddressResponse street2(String street2) {
    this.street2 = street2;
    return this;
  }

   /**
   * Colonia
   * @return street2
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STREET2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreet2() {
    return street2;
  }


  @JsonProperty(JSON_PROPERTY_STREET2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreet2(String street2) {
    this.street2 = street2;
  }


  public CompanyFiscalInfoAddressResponse city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public CompanyFiscalInfoAddressResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State
   * @return state
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  public CompanyFiscalInfoAddressResponse country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public CompanyFiscalInfoAddressResponse postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code
   * @return postalCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public CompanyFiscalInfoAddressResponse externalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
    return this;
  }

   /**
   * Street number
   * @return externalNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalNumber() {
    return externalNumber;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalNumber(String externalNumber) {
    this.externalNumber = externalNumber;
  }


  public CompanyFiscalInfoAddressResponse internalNumber(String internalNumber) {
    this.internalNumber = internalNumber;
    return this;
  }

   /**
   * Unit / apartment number
   * @return internalNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalNumber() {
    return internalNumber;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalNumber(String internalNumber) {
    this.internalNumber = internalNumber;
  }


  /**
   * Return true if this company_fiscal_info_address_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyFiscalInfoAddressResponse companyFiscalInfoAddressResponse = (CompanyFiscalInfoAddressResponse) o;
    return Objects.equals(this._object, companyFiscalInfoAddressResponse._object) &&
        Objects.equals(this.street1, companyFiscalInfoAddressResponse.street1) &&
        Objects.equals(this.street2, companyFiscalInfoAddressResponse.street2) &&
        Objects.equals(this.city, companyFiscalInfoAddressResponse.city) &&
        Objects.equals(this.state, companyFiscalInfoAddressResponse.state) &&
        Objects.equals(this.country, companyFiscalInfoAddressResponse.country) &&
        Objects.equals(this.postalCode, companyFiscalInfoAddressResponse.postalCode) &&
        Objects.equals(this.externalNumber, companyFiscalInfoAddressResponse.externalNumber) &&
        Objects.equals(this.internalNumber, companyFiscalInfoAddressResponse.internalNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_object, street1, street2, city, state, country, postalCode, externalNumber, internalNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyFiscalInfoAddressResponse {\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    street1: ").append(toIndentedString(street1)).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    externalNumber: ").append(toIndentedString(externalNumber)).append("\n");
    sb.append("    internalNumber: ").append(toIndentedString(internalNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

