/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.BlacklistRuleResponse;
import com.conekta.model.CreateRiskRulesData;
import com.conekta.model.DeletedBlacklistRuleResponse;
import com.conekta.model.DeletedWhitelistRuleResponse;
import com.conekta.model.Error;
import com.conekta.model.RiskRulesList;
import com.conekta.model.WhitelistlistRuleResponse;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AntifraudApi
 */
public class AntifraudApiTest {

    private final AntifraudApi api = new AntifraudApi();

    /**
     * Create blacklisted rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRuleBlacklistTest() throws ApiException {
        //CreateRiskRulesData createRiskRulesData = null;
        //String acceptLanguage = null;
        //BlacklistRuleResponse response = api.createRuleBlacklist(createRiskRulesData, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Create whitelisted rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRuleWhitelistTest() throws ApiException {
        //String acceptLanguage = null;
        //CreateRiskRulesData createRiskRulesData = null;
        //WhitelistlistRuleResponse response = api.createRuleWhitelist(acceptLanguage, createRiskRulesData);
        // TODO: test validations
    }

    /**
     * Delete blacklisted rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRuleBlacklistTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //DeletedBlacklistRuleResponse response = api.deleteRuleBlacklist(id, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Delete whitelisted rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRuleWhitelistTest() throws ApiException {
        //String id = null;
        //String acceptLanguage = null;
        //String xChildCompanyId = null;
        //DeletedWhitelistRuleResponse response = api.deleteRuleWhitelist(id, acceptLanguage, xChildCompanyId);
        // TODO: test validations
    }

    /**
     * Get list of blacklisted rules
     *
     * Return all rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRuleBlacklistTest() throws ApiException {
        //String acceptLanguage = null;
        //RiskRulesList response = api.getRuleBlacklist(acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get a list of whitelisted rules
     *
     * Return all rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRuleWhitelistTest() throws ApiException {
        //String acceptLanguage = null;
        //RiskRulesList response = api.getRuleWhitelist(acceptLanguage);
        // TODO: test validations
    }

}
