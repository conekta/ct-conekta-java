/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.*;

import com.conekta.model.Error;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.*;

/**
 * API tests for PaymentLinkApi
 */
public class PaymentLinkApiTest {

    private final PaymentLinkApi api = new PaymentLinkApi(new ApiClient().setBasePath(Utils.getBasePath()));

    /**
     * Cancel Payment Link
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelCheckoutTest() throws ApiException {
        String id = "ff6918c6-5043-43b9-a7ec-d40d407d62c1";
        String acceptLanguage = "es";
        CheckoutResponse response = api.cancelCheckout(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Create Unique Payment Link
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCheckoutTest() throws ApiException {
        Checkout checkout = new Checkout();
        checkout.setAllowedPaymentMethods(Arrays.asList("cash","card"));
        checkout.setType("PaymentLink");
        checkout.setName("FooCheckout");
        checkout.setRecurrent(false);
        CheckoutOrderTemplate orderTemplate = new CheckoutOrderTemplate();
        CustomerInfoJustCustomerId customerInfoJustCustomerId =  new CustomerInfoJustCustomerId();
        customerInfoJustCustomerId.setCustomerId("cus_2tYENskzTjjgkGQLt");
        orderTemplate.setCustomerInfo(new CheckoutOrderTemplateCustomerInfo(new CustomerInfoJustCustomerId()));
        checkout.setOrderTemplate(new CheckoutOrderTemplate());
        String acceptLanguage = "es";
        CheckoutResponse response = api.createCheckout(checkout, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Send an email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailCheckoutTest() throws ApiException {
        String id = "ff6918c6-5043-43b9-a7ec-d40d407d62c1";
        EmailCheckoutRequest emailCheckoutRequest = new EmailCheckoutRequest();
        emailCheckoutRequest.setEmail("fooo@gmail.com");
        String acceptLanguage = "es";
        CheckoutResponse response = api.emailCheckout(id, emailCheckoutRequest, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get a payment link by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCheckoutTest() throws ApiException {
        String id = "ff6918c6-5043-43b9-a7ec-d40d407d62c1";
        String acceptLanguage = "es";
        CheckoutResponse response = api.getCheckout(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get a list of payment links
     *
     * Returns a list of links generated by the merchant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCheckoutsTest() throws ApiException {
        String acceptLanguage = "es";
        Integer limit = 20;
        CheckoutsResponse response = api.getCheckouts(acceptLanguage, null, limit, null, null, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Send an sms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void smsCheckoutTest() throws ApiException {
        String id = "ff6918c6-5043-43b9-a7ec-d40d407d62c1";
        SmsCheckoutRequest smsCheckoutRequest = new SmsCheckoutRequest();
        smsCheckoutRequest.setPhonenumber("5534343432");
        String acceptLanguage = "es";
        CheckoutResponse response = api.smsCheckout(id, smsCheckoutRequest, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

}
