/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.Error;
import com.conekta.model.Product;
import com.conekta.model.ProductOrderResponse;
import com.conekta.model.UpdateProduct;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi(new ApiClient().setBasePath(Utils.getBasePath()));

    /**
     * Create Product
     *
     * Create a new product for an existing order.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ordersCreateProductTest() throws ApiException {
        String id = "ord_2tUigJ8DgBhbp6w5D";
        Product product = new Product();
        product.setUnitPrice(1000);
        product.setQuantity(1);
        String acceptLanguage = "es";
        ProductOrderResponse response = api.ordersCreateProduct(id, product, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Delete Product
     *
     * Delete product for an existing orden
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ordersDeleteProductTest() throws ApiException {
        String id = "ord_2tUigJ8DgBhbp6w5D";
        String lineItemId = "line_item_2tVz8UkyWhSxLfUd7";
        String acceptLanguage = "es";
        ProductOrderResponse response = api.ordersDeleteProduct(id, lineItemId, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Update Product
     *
     * Update an existing product for an existing orden
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ordersUpdateProductTest() throws ApiException {
        String id = "ord_2tUigJ8DgBhbp6w5D";
        String lineItemId = "line_item_2tVz8UkyWhSxLfUd7";
        UpdateProduct updateProduct = new UpdateProduct();
        updateProduct.setQuantity(2);
        String acceptLanguage = "es";
        ProductOrderResponse response = api.ordersUpdateProduct(id, lineItemId, updateProduct, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

}
