/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.*;

import com.conekta.model.Error;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentMethodsApi
 */
public class PaymentMethodsApiTest {

    private final PaymentMethodsApi api = new PaymentMethodsApi(new ApiClient().setBasePath(Utils.getBasePath()));

    /**
     * Create Payment Method
     *
     * Create a payment method for a customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerPaymentMethodsTest() throws ApiException {
        String id = "cus_2tYENskzTjjgkGQLt";
        PaymentMethodCardRequest paymentMethodCardRequest = new PaymentMethodCardRequest();
        paymentMethodCardRequest.setTokenId("token");
        CreateCustomerPaymentMethodsRequest createCustomerPaymentMethodsRequest = new CreateCustomerPaymentMethodsRequest(paymentMethodCardRequest);
        String acceptLanguage = "es";
        CreateCustomerPaymentMethodsResponse response = api.createCustomerPaymentMethods(id, createCustomerPaymentMethodsRequest, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Delete Payment Method
     *
     * Delete an existing payment method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCustomerPaymentMethodsTest() throws ApiException {
        String id = "cus_2tYENskzTjjgkGQLt";
        String paymentMethodId = "off_ref_2tXyk3ncr1NHdfqMS";
        String acceptLanguage = "es";
        UpdateCustomerPaymentMethodsResponse response = api.deleteCustomerPaymentMethods(id, paymentMethodId, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get Payment Methods
     *
     * Get a list of Payment Methods
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerPaymentMethodsTest() throws ApiException {
        String id = "cus_2tYENskzTjjgkGQLt";
        String acceptLanguage = "es";
        Integer limit = 20;
        GetPaymentMethodResponse response = api.getCustomerPaymentMethods(id, acceptLanguage, null, limit, null, null, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Update Payment Method
     *
     * Gets a payment Method that corresponds to a customer ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCustomerPaymentMethodsTest() throws ApiException {
        String id = "cus_2tYENskzTjjgkGQLt";
        String paymentMethodId = "off_ref_2tXyk3ncr1NHdfqMS";
        UpdatePaymentMethods updatePaymentMethods = new UpdatePaymentMethods();
        updatePaymentMethods.setName("Foo PM");
        String acceptLanguage = "es";
        UpdateCustomerPaymentMethodsResponse response = api.updateCustomerPaymentMethods(id, paymentMethodId, updatePaymentMethods, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

}
