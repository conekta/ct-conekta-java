/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.Error;
import com.conekta.model.SubscriptionEventsResponse;
import com.conekta.model.SubscriptionRequest;
import com.conekta.model.SubscriptionResponse;
import com.conekta.model.SubscriptionUpdateRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi(new ApiClient().setBasePath(Utils.getBasePath()));

    /**
     * Cancel Subscription
     *
     * You can cancel the subscription to stop the plans that your customers consume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        String acceptLanguage = "es";
        SubscriptionResponse response = api.cancelSubscription(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Create Subscription
     *
     * You can create the subscription to include the plans that your customers consume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSubscriptionTest() throws ApiException {
        String id = "cus_2tYENskzTjjgkGQLt";
        SubscriptionRequest subscriptionRequest = new SubscriptionRequest();
        subscriptionRequest.setPlanId("plan_2tZb5q8Z3PYpg6SJd");
        String acceptLanguage = "es";
        SubscriptionResponse response = api.createSubscription(id, subscriptionRequest, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get Events By Subscription
     *
     * You can get the events of the subscription(s) of a client, with the customer id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllEventsFromSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        String acceptLanguage = "es";
        SubscriptionEventsResponse response = api.getAllEventsFromSubscription(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get Subscription
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        String acceptLanguage = "es";
        SubscriptionResponse response = api.getSubscription(id, acceptLanguage);
        Assertions.assertNotNull(response);
    }

    /**
     * Pause Subscription
     *
     * You can pause the subscription to stop the plans that your customers consume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pauseSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        String acceptLanguage = "es";
        SubscriptionResponse response = api.pauseSubscription(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Resume Subscription
     *
     * You can resume the subscription to start the plans that your customers consume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resumeSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        String acceptLanguage = "es";
        SubscriptionResponse response = api.resumeSubscription(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Update Subscription
     *
     * You can modify the subscription to change the plans that your customers consume
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscriptionTest() throws ApiException {
        String id = "sub_2tZdSR8jpcL3SXUy4";
        SubscriptionUpdateRequest subscriptionUpdateRequest = new SubscriptionUpdateRequest();
        subscriptionUpdateRequest.setTrialEnd(1);
        String acceptLanguage = "es";
        SubscriptionResponse response = api.updateSubscription(id, subscriptionUpdateRequest, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

}
