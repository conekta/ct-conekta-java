/*
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.conekta;

import com.conekta.*;
import com.conekta.auth.*;
import com.conekta.model.*;

import com.conekta.model.Error;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
public class EventsApiTest {

    private final EventsApi api = new EventsApi(new ApiClient().setBasePath(Utils.getBasePath()));

    /**
     * Get Event
     *
     * Returns a single event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventTest() throws ApiException {
        String id = "63fe3d2ddf70970001cfb41a";
        String acceptLanguage = "es";
        EventResponse response = api.getEvent(id, acceptLanguage, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Get list of Events
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventsTest() throws ApiException {
        String acceptLanguage = "es";
        Integer limit = 20;
        GetEventsResponse response = api.getEvents(acceptLanguage, null, limit, null, null, null);
        Assertions.assertNotNull(response);
    }

    /**
     * Resend Event
     *
     * Try to send an event
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendEventTest() throws ApiException {
        String eventId = "63fe3d2ddf70970001cfb41a";
        String webhookLogId = "webhl_2tsv6NzWJHBWCkqGt";
        String acceptLanguage = "es";
        EventsResendResponse response = api.resendEvent(eventId, webhookLogId, acceptLanguage);
        Assertions.assertNotNull(response);
    }

}
